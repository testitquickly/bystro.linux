Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2025-03-20T05:27:18+02:00


[ @ram @ssd @tmp ]

для Debian + SSD оптимально сделать гибрид: swap + zram. Тогда:

раздел swap на SSD будет жить как «резерв»;

zram (сжатый swap в RAM) разгрузит SSD и ускорит работу.

2. Настройка ZRAM

sudo apt install zram-tools


Файл /etc/default/zramswap (в Debian 12 уже есть):

ALGO=lz4        # алгоритм сжатия (быстрый)
PERCENT=50      # процент от объёма RAM (например, 50%)
PRIORITY=100    # приоритет (zram будет использоваться раньше, чем swapfile)


Создаём конфиг:
sudo nano /etc/sysctl.d/99-ssd-tuning.conf

	swappiness=10 → SSD трогается в последнюю очередь, в основном работает RAM+zram.
	vfs_cache_pressure=50 → ускоряет работу с файловой системой, меньше обращений к SSD.
	Система быстрее и SSD меньше изнашивается.

вставить

vm.swappiness=10
vm.vfs_cache_pressure=50


применить

sudo sysctl -p /etc/sysctl.d/99-ssd-tuning.conf


проверка
cat /proc/sys/vm/swappiness
cat /proc/sys/vm/vfs_cache_pressure


sudo systemctl restart zramswap


В /etc/fstab у swap-раздела можно дописать:
UUID=xxxx-xxxx  none  swap  sw,pri=10  0  0



Итоговая проверка

swapon --show
free -h


Итог:

SSD-свап лежит «в фоне» на случай полной загрузки памяти;

zram используется первым, экономит RAM и снижает износ SSD;

никаких проблем с тем, где физически на SSD лежит swap (начало/конец — одинаково).

Хотите, я напишу рекомендации по настройке swappiness/vfs_cache_pressure под SSD+zram, чтобы система чаще пользовалась RAM/zram, а SSD трогала только в крайнем случае?

===== Перенести tmp в RAM =====

Не обязательно, но можно загружать содержимое каталога /tmp в оперативную память, если её много.

Последствия: 
* браузер (и другое ПО) будет работать быстрее, потому что  RAM работает быстрее любого диска. Это будет заметно на старом ноутбуке, на новом вряд ли
* система всё так же будет считать, что /tmp находится на ssd
* немного снизится износ ssd
* при вероятном сбое системы какие-то файлы из временных будут недоступны в принципе

Надо отредактировать файл ''fstab'' (File System Table). 

Действовать аккуратно — это таблица монтирования файловых систем, которую читает система при каждой своей загрузке. Если там напортачить, будет больно. 

Сперва лучше его забэкапить

''sudo cp /etc/fstab /etc/fstab.bak''

Открыть 

''sudo mcedit /etc/fstab''

Добавить строку

''tmpfs /tmp tmpfs defaults,mode=1777 0 0''

Если хочется выделить для tmp только определенное количество RAM:

''tmpfs /tmp tmpfs defaults,size=4G,mode=1777 0 0''

Сохранить, выйти. 

Применить изменения:

''sudo systemctl daemon-reload''

Новые настройки будут подхвачены после перезагрузки. Убедиться в том, что /tmp находится в RAM:

''df -h /tmp''

Ожидаемый ответ: 

''tmpfs on /tmp type tmpfs (rw,nosuid,nodev)''
