Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2025-03-20T05:27:18+02:00

====== Оптимизировать RAM ======

[ @ram @ssd @tmp ]

===== Настройка ZRAM =====

Для Debian на SSD оптимально сделать гибрид ''swap + zram'':

* zram (сжатый swap в RAM) будет использоваться используется первым, это экономит RAM и снижает износ SSD,
* раздел swap на SSD будет жить как «резерв» на случай полной загрузки памяти.

''sudo apt install zram-tools swapon''

''sudo mcedit /etc/default/zramswap''

Задать настройки (раскомментировать строки):

''ALGO=lz4        # алгоритм сжатия (быстрый)''
''PERCENT=50      # процент от объёма RAM (например, 50%)''
''PRIORITY=100    # приоритет (zram будет использоваться раньше, чем swapfile)''

Сделать конфиг:

''sudo mcedit /etc/sysctl.d/99-ssd-tuning.conf''

вставить:

''vm.swappiness=10''
''vm.vfs_cache_pressure=50''

* swappiness=10 → SSD трогается в последнюю очередь, в основном работает RAM+zram.
* vfs_cache_pressure=50 → ускоряет работу с файловой системой, меньше обращений к SSD, система работает быстрее и SSD меньше изнашивается.

Применить:

''sudo sysctl -p /etc/sysctl.d/99-ssd-tuning.conf''

Проверить:

''cat /proc/sys/vm/swappiness''

''cat /proc/sys/vm/vfs_cache_pressure''

Применить:

''sudo systemctl restart zramswap''

В /etc/fstab (триста раз осторожно!)

''sudo mcedit /etc/fstab''

для swap-раздела можно дописать:

''UUID=xxxx-xxxx  none  swap  sw,pri=10  0  0''

Итоговая проверка:

''/sbin/swapon --show &&'' free -h

===== Перенести /tmp в RAM =====

Не обязательно, но можно загружать содержимое каталога /tmp в оперативную память, если её много.

Последствия: 
* браузер (и другое ПО) будет работать быстрее, потому что RAM работает быстрее любого диска. Это будет заметно на старом ноутбуке (на новом вряд ли)
* система всё так же будет считать, что /tmp находится на ssd
* немного снизится износ ssd
* при вероятном сбое системы какие-то файлы из временных будут недоступны в принципе — увы.

Надо отредактировать файл ''fstab'' (File System Table). 

Действовать аккуратно — это таблица монтирования файловых систем, которую читает система при каждой своей загрузке. Если там напортачить, будет больно. 

Сперва лучше его забэкапить

''sudo cp /etc/fstab /etc/fstab.bak''

Открыть 

''sudo mcedit /etc/fstab''

Добавить строку

''tmpfs /tmp tmpfs defaults,mode=1777 0 0''

Если хочется выделить для tmp только определенное количество RAM:

''tmpfs /tmp tmpfs defaults,size=4G,mode=1777 0 0''

Сохранить, выйти. 

Применить изменения:

''sudo systemctl daemon-reload''

Новые настройки будут подхвачены после перезагрузки компьютера. 

Убедиться в том, что /tmp находится в RAM:

''df -h /tmp''

Ожидаемый ответ: 

''tmpfs on /tmp type tmpfs (rw,nosuid,nodev)''
