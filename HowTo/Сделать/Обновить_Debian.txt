Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2022-02-23T00:50:15+02:00

====== Обновить Debian ======

[ @debian @update ]

===== Проверить версию и релиз Debian =====

Ранее для этого использовали  составную команду «''lsb_release -d && cat /etc/debian_version''», но ''lsb'' ([[https://wiki.linuxfoundation.org/lsb/start|Linux Standard Base]]) отменена.

Можно получить весьма подробную информацию:

''hostnamectl''

или попроще:

''cat /etc/os-release''

Пример ответа:

''PRETTY_NAME="Debian GNU/Linux 12 (bookworm)"''
''NAME="Debian GNU/Linux"''
''VERSION_ID="12"''
''VERSION="12 (bookworm)"''
''VERSION_CODENAME=bookworm''
''ID=debian''
''HOME_URL="''[[https://www.debian.org/|''https://www.debian.org/'']]''"''
''SUPPORT_URL="''[[https://www.debian.org/support|''https://www.debian.org/support'']]''"''
''BUG_REPORT_URL="''[[https://bugs.debian.org/|''https://bugs.debian.org/'']]''"''

Можно выдернуть данные по отдельному параметру'':''

''grep -oP '(?[=^VERSION_ID=).+' /etc/os-release | tr -d '"'''

и использовать их в скриптах на bash. Например:

'''
myDebianVersion=$(grep -oP '(?[=^VERSION_ID=).+' /etc/os-release | tr -d '"')
myDebianName=$(grep -oP '(?[=^VERSION_CODENAME=).+' /etc/os-release | tr -d '"')
echo -e "This is Debian «$myDebianName» $myDebianVersion (Stable)]"
'''

===== Дежурное обновление системы =====

''sudo apt-get update && sudo apt-get upgrade''

===== Обновление до определённого ядра =====

Сперва надо знать точный номер ядра, к которому нужно обновиться — [[HowTo:Проверить:Какие ядра есть в системе]] — и причина для обновления должна быть обоснована. 

	Всегда есть вероятность нафакапиться, поэтому продвигаться надо осторожно, всегда проверяя, можно ли откатиться к предыдущему состоянию. 
	
	При обновлении ядер разумно поставить их несколько совместно и явно указать в загрузке более новое. Если что — откатиться.

''sudo aptitude update''
	
Списки пакетов обновляются из всех репозиториев, указанных в файле /etc/apt/sources.list а также в Система > Менеджер пакетов Synaptic > Настройки > Репозитории > Other Software 

	1. ''sudo aptitude install REQUIRED-linux-image-version''
	2. ''sudo reboot''

Если после загрузки все идёт хорошо, тогда подтягиваем зависимости для нового ядра, разрешив Debian автоматом удалять старые зависимости:

''sudo aptitude full-upgrade''

===== Обновление до нового релиза =====

Отслеживать порядковый номер и имя доступных релизов — https://www.debian.org/releases/

==== Обновить sources.list ====

[[Обновить sources.list]] по имени нового релиза.

Очень внимательно посмотреть, если в сети никто не ругается на обновления.

==== Обновить систему до нового релиза ====

''sudo aptitude full-upgrade''

Команда //full-upgrade// изначально назвывалась //dist-upgrade//. aptitude все ещё распознает dist-upgrade как синоним full-upgrade. Но «//aptitude full-upgrade»// обновляет установленные пакеты до их наиболее свежих версий, удаляя или устанавливая пакеты, если это необходимо. Также выполняется установка новых необходимых и требующихся пакетов. Эта команда менее консервативна (более агрессивна) чем «//safe-upgrade»//, и потому более вероятно, что она произведёт нежелательные действия. Тем не менее, она способна обновить пакеты, которые не могут быть обновлены командной «//safe-upgrade//».

Если в командной строке после этой команды не указан ни один пакет, aptitude попытается обновить //каждый// пакет, который может быть обновлен. 

После обновления нужно „''sudo reboot''” чтобы посмотреть, что получилось. 

	Обычно надо заново настроить [[Настроить:Поменять местами символы на клавише точки и запятой в русской раскладке]], иногда меняется конфиг для [[HowTo:Настроить:grub2]]

=== Простое и бесконтрольное обновление ===

Чревато последствиями, но если бессмертно и бесстрашно…

	1. ''sudo apt update''
	2. ''sudo apt dist-upgrade''

==== Если обновления проверяются только из кэша ====

[[Заставить aptitude обновляться из сети, а не из кэша]]
