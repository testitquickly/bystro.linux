Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2024-12-18T09:26:27+02:00

====== Nvidia ======

[ @debian @install @nvidia @drivers @video ]

Если надо подключить внешний монитор через видеокарту от Nvidia, то сперва надо убедиться в том, что **монитор НЕ подключен к ноуту**.

Драйвера можно скачать с официального сайта в виде файла ***.run, но лучше сделать это стандартным путём по предписанному рецепту с https://wiki.debian.org/NvidiaGraphicsDrivers — при установке будет проще с зависимостями, а в будущем будет проще с обновлениями.

===== Определить серию и драйвера видеокарты =====

Прочитать внимательно https://wiki.debian.org/NvidiaGraphicsDrivers — посмотреть раздел про свою версию OS. 

Надо решить, ставить ли новейшие драйвера (но тогда будет нужен бэкпорт, что для Stable не очень хорошо), или те, что постарее (но не факт, что с ними заработает новая видеокарта). Чем новее драйвера — тем лучше, но к бэкпорту всегда надо относиться с большим подозрением.

Сперва проверить

''nvidia-smi''

Если драйверов нет, то в ответ придет предложение их установить и, вероятно, сперва надо посмотреть подсказку о том, какие именно драйвера подойдут к действующей видеокарте. 

''sudo apt-get install nvidia-detect; nvidia-detect''

===== Обычная установка =====

Согласно  https://wiki.debian.org/NvidiaGraphicsDrivers :

''sudo apt update; sudo apt install nvidia-driver nvidia-settings firmware-misc-nonfree''

Перезагрузить систему:

''sudo reboot''

Проверить установку драйвера:

''nvidia-smi''

Ожидаемый ответ: таблица с информацией о видеокарте и драйвере.

===== Установка через бэкпорт =====

Не факт, что нужно двигаться по этой ветке, но если принято решение, то ок.

==== Разрешить бэкпорт ====

''sudo mcedit /etc/apt/sources.list''

Дважды перепроверить название дистрибутива. 

Добавить в строку для снятия main апдейтов добавить открытие бэкпорта. В норме обращаемся к „''deb.debian.org/debian/”, но адрес сервера может быть любым из наиболее подходящих'':

	''# main (plus backports for nvidia drivers)''
''deb http://deb.debian.org/debian bookworm-backports main contrib non-free non-free-firmware''

Сохранить изменения.

''sudo apt update && sudo apt upgrade''

==== Установить драйвера из backports ====

Эта команда может поменяться, ее надо перепроверить на шаге «**Определить серию и драйвера видеокарты**»:

''sudo apt install -t bookworm-backports nvidia-driver firmware-misc-nonfree''

Будет установлен пакет //nvidia-kernel-dkms//. 

При установке драйвер Nouveau не будет удалён (это и не надо), но он автоматически заблэклистится: появится файл ///etc/modprobe.d/blacklist-nvidia-nouveau.conf// с содержимым «blacklist nouveau»

	Можно (если свербит) ещё добавить файл ''sudo mcedit /etc/modprobe.d/blacklist.conf'' с перечнем всех модулей всех свободных драйверов:
		* blacklist vga16fb
		* blacklist nouveau
		* blacklist rivafb
		* blacklist nvidiafb
		* blacklist rivatv
	Но это уже ни на что не повлияет.

''sudo reboot''

==== Обновить систему ====

''sudo apt-get update && sudo apt-get upgrade''

Если будут устаревшие пакеты nvidia, их будет предложено автоудалить:

''sudo apt autoremove''

Затем ещё раз 

''sudo apt-get update && sudo apt-get upgrade''

Убедиться в том, что драйвер работает:

''nvidia-smi''

В ответ ожидаем таблицу с данными о драйвере и видеокарте.

===== Установить утилиту контроля настроек nvidia =====

Вероятнее всего, она уже была незаметно установлена вместе с драйверами:

В списке программ > Настройка появится «NVIDIA X Server Settings». Если она успешно запускается, то уже почти всё норм. Если нет:

''sudo aptitude install nvidia-settings''

===== Установка CUDA Toolkit =====

Сперва надо проверить соответствие установленных драйверов Nvidia и версии CUDA Toolkit — они должны быть синхронизированы. Есть вероятность, что в Debian Stable драйвера для Nvidia будут «более старыми», нежели… Тогда надо установить драйвера через бэкпорт. Но сперва три раза перепровериться и убедиться в том, что новые драйвера нужны.

Если решено ставить CUDA Toolkit отдельно, то сперва надо знать, что эта установка потребует много места на диске с системой. Это решается только установкой CUDA Toolkit через ''run''-файл.

Скачать установщик CUDA с официального сайта https://developer.nvidia.com/cuda-downloads — выбрать Linux, архитектуру (x86_64), OS (Debian), версию (12)  и инсталлер runfile (local).

Сделать файл исполняемым:

''chmod +x cuda*.run''

Установить CUDA Toolkit в отдельный каталог на отдельном диске:

''sudo ./cuda_*.run --silent --toolkit --installpath=''__''/your_folder''__

''--silent'' — без дополнительных вопросов; на экран ничего не выводится, надо терпеливо ждать завершения установки
''--toolkit'' — установить только CUDA Toolkit, без драйверов и компонентов для разработчиков

==== Настроить переменные окружения ====

''mcedit ~/.bashrc''

добавить:

''export PATH=''__''/your_folder''__''/cuda/bin:$PATH''
''export LD_LIBRARY_PATH=''__''/your_folder''__''/cuda/lib64:$LD_LIBRARY_PATH''

Применить изменения:

''source ~/.bashrc''

==== Проверить установку ====

''nvcc --version''

Если «команда не найдена» — проверить, что утилита ''nvcc'' действительно находится в __''/your_folder''__/cuda/bin/ и что PATH указан правильно.


--------------------





Дальше пример установки версии ''12.6.3'' — ссылки поменяются, поэтому надо смотреть инструкцию по ссылке выше.

Выполнить последовательно:

''wget https://developer.download.nvidia.com/compute/cuda/12.6.3/local_installers/cuda-repo-debian12-12-6-local_12.6.3-560.35.05-1_amd64.deb'' 

Файл здоровый, не меньше 3 Gb.

''sudo dpkg -i cuda-repo-debian12-12-6-local_12.6.3-560.35.05-1_amd64.deb''

Появится предупреждение о том, что надо отдельно установить ключ GPG:

''sudo cp /var/cuda-repo-debian12-12-6-local/cuda-*-keyring.gpg /usr/share/keyrings/''

Этот шаг не обязателен, но вероятен

''sudo add-apt-repository contrib''

Установить:

''sudo apt-get update; sudo apt-get -y install cuda-toolkit-12-6''

==== Добавить CUDA в PATH ====

''echo 'export PATH=/usr/local/cuda/bin:$PATH' >> ~/.bashrc''

''echo 'export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH' >> ~/.bashrc''

''source ~/.bashrc''

==== Проверить установку ====

''nvcc --version''

Ожидаемый ответ:

''nvcc: NVIDIA (R) Cuda compiler driver''
''Copyright (c) 2005-2024 NVIDIA Corporation''
''Built on Tue_Oct_29_23:50:19_PDT_2024''
''Cuda compilation tools, release 12.6, V12.6.85''
''Build cuda_12.6.r12.6/compiler.35059454_0''

