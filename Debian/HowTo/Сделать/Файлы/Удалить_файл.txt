Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2022-02-22T19:55:50+02:00

====== Удалить файл ======

[ @delete @console @files ]

Для удаления файлов используется команда ''rm'':

''rm file.txt''

Внимание, ''rm'' удаляет файлы __сразу__, без возможности восстановления.

Чтобы рекурсивно и без подтверждения удалить все файлы и папки в каталоге ''alldocuments'', а его самого оставить, нужны ключи ''-r'' (recursive) и ''-f'' (force):

''rm -rf /mnt/save/alldocuments/*''

Если убрать ''*'', то будет удалён сам каталог.

===== Удалить файлы, которые не удаляются =====

После сбоя при записи, а иногда из-за других причин, на диске может остаться файл, который не удаляется. Причём удаляются все его данные, у него нулевой размер, но сам он не удаляется и не позволяет переписать себя.

==== Освободить файл от процесса ====

Его может удерживать какой-то процесс. Можно найти этот процесс, остановить его, файл освободится.

''lsof | grep "ИМЯ_ФАЙЛА"''

Или через 

'''
sudo fuser -v ИМЯ_ФАЙЛА
'''

Если файл действительно занят действующим процессом, его надо завершить, убив процесс по его номеру:

''sudo kill -9'' __''PID''__

Или через

''sudo fuser -k ИМЯ_ФАЙЛА''

Затем удалить файл:

''sudo rm -f ИМЯ_ФАЙЛА''

==== Снять защиту от удаления ====

Вероятно, файл защищён от удаления атрибутами immutable:

'''
lsattr -a ИМЯ_ФАЙЛА
'''

Если в свойствах есть параметр ''i'', его надо убрать:

''sudo chattr -i ИМЯ_ФАЙЛА''

Удалить файл:

''sudo rm -f ИМЯ_ФАЙЛА''

==== Удалить файл через inode ====

Узнать inode проблемного файла:

''ls -li ИМЯ_ФАЙЛА''

Удалить его по inode:

''find /''__''путь_к_файлу''__ ''-inum'' __''НОМЕР_INODE''__ ''-delete''

==== Проверить файловую систему на ошибки ====

Надо отмонтировать диск с проблемным файлом, чтобы к нему не происходило обращений. Предположим, что он примонтирован как ''/sdd'':

''sudo umount /dev/sdd''

Если его файловам система ''ext4'':

''sudo fsck.ext4 -f /dev/sdd''

После проверки, если всё хорошо, диск надо примонтировать, затем удалить проблемный файл.
