Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2023-12-15T03:22:57+02:00

====== hardlink ======

[ @debian @hardlink ]

hardlink — имя файла, ссылка на inode файла. В общем, когда создаёт новый файл, в системе появляется хардлинк на сектора с данными, которые относятся к созданному файлу.

При редактировании хардлинка происходит редактирование содержимого оригинального файла, на который ссылается хардлинк. 

При удалении хардлинка из системы удаляется и файл, на который указывал хардлинк. Но не всегда. См. теорию [[Симлинки и хардлинки]]

И см. [[symlink]]

===== Создать и переименовать хардлинк одной командой =====

''ln /home/mySettings/myScripts/debian/debian_update_and_upgrade.sh ~/.local/bin/updeb''

В каталоге ''~/.local/bin/'' появится новый файл с названием “''debup''”.

Почему “''debup''”? Как захотел, так и назвал. Если бы не прописал ему название, то появился бы файл ''~debian_update_and_upgrade.sh''

Почему он отображается с тильдой? Потому что это не сам файл, а симлинк на файл.

===== Проверить хардлинк =====

==== stat ====

Основная команда для получения служебной информации о любом файле

''stat test.txt''

Если файл ''test.txt'' является симлинком, ответ будет такого рода:

''Файл: test.txt -> /srv/dev-disk-by-uuid-9b3771d9-c454-4acd-b683-568da8815820/books.txt''
  ''Размер: 64            Блоков: 8          Блок В/В: 4096   символьная ссылка''
''Устройство: 8/1 Инода: 2359350     Ссылки: 1''
''Доступ: (0777/lrwxrwxrwx)  Uid: ( 1002/   tower)   Gid: (  100/   users)''
''…''

Символ ''->'' указывает на то, что файл — это ссылка.

Очень удобно понимать, куда именно указывает ссылка на каталог.

==== ls ====

И параметр ''-l'' (long format)

''ls -l test.txt''

Ожидаем ответ такого вида:

''-rw-r--r-- 2 astenix astenix 87 окт 26 21:12 test.txt''

Собственно, это атрибуты оригинального файла.

Можно узнать сразу и если файл — симлинк, и если да, то узнать inode, на который он указывает

''ls -li test.txt''

Можно получить информацию сразу о нескольких файлах

''ls -li test.txt test2.txt''

И если в ответе видно, что оба файла указывают на один и тот же inode, то перед нами — хардлинки.

==== file ====

Не факт, что утилита ''file'' установлена по-умолчанию, но если есть, то:

''file test.txt''

Ответ:

''test.txt: Unicode text, UTF-8 text''

Если бы файл был симлинком, ответ был бы такой:

''test.txt: symbolic link to /home/AppImages/test.txt''

==== readlink ====

''readlink test.txt''

Если это хардлинк, в ответ будет полная тишина (словно ничего не произошло).

И если проверяемый файл не существует, в ответ тоже вернется тишина, поэтому данный способ проверки мало кто использует. Есть возможность вызывать команду с параметром ''-v'', но проще забить.

Если это симлинк, в ответ должен вернуться путь на оригинал:

''/home/AppImages/test.txt''
