Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2025-05-27T07:24:41+03:00

====== RSync ======

[ @rsync @backup @ssh ]

	*todo Положить это и в bystro.linux.nas — там посмотреть, если есть встроенный механизм/сервис rsync и как его использовать

Инструмент для продвинутого копирования файлов. После первого раза копирует только те файлы, которые были изменены. Можно синхронизировать содержимое каталогов, можно докидывать файлы в каталог. Можно копировать файлы через ssh. Нет версионности (для этого см. BorgBackup).

===== Параметры =====

-''a'' (или --archive): Архивный режим, включает рекурсивную копию (-r) и сохранение прав доступа, владельцев, меток времени (-ptgoD)

-''z'': Сжимает данные при передаче, экономит трафик и ускоряет копирование по сети, но вредит процессору при копировании
	# музыки (.mp3, .ogg, .flac)
	# фото (.jpg, .png, .webp)
	# видео (.mp4, .mkv)
	# архивов (.zip, .tar.gz, .7z)
	# и некоторые файлы pdf
	# Это уже сжатые файлы, сжимать их снова нет смысла, а иногда это увеличивает их объем. Для их игнорирования задана опция --skip-compress

-''R'' (или --relative): нужен, если в один бэкап-каталог сохраняем сразу несколько каталогов из разных мест на диске. При одиночной команде копирования не нужен.

--''delete'': Удаляет с NAS файлы, которые уже были в бэкапе, но были удалены на ноутбуке. Полная синхронизация каталогов.

-''e ssh'': заюзать ssh

--''exclude'': проигнорировать файл или каталог. Примеры: 
	--exclude='*.tc~' 
	--exclude='Notebooks/'

	Если надо игнорировать несколько расширений файлов (или несколько каталогов), их надо прописывать через отдельные параметры. Если их много, удобнее перечислять их не в одной строке, а через перенос:
		--exclude='*.tc~'  \
		--exclude='*.pdf'  \

==== Копирование «ноутбук => NAS» ====

rsync -az -e ssh user@remote_host:/remote/path/ /local/path/

==== Копирование «NAS <= ноутбук» ====

rsync -az -e ssh user@remote_host:/remote/path/ /local/path/

===== Пример скрипта копирования на NAS =====

''#!/bin/bash''

	''# переменные''

''ssh_keys='/home/user/sshKeys/nas_user'''

	''# файлы, которые будут копироваться без предварительного сжатия''
''file_list='mp3,ogg,flac,aac,m4a,wma,mp4,mkv,avi,webm,wmv,mov,flv,jpg,jpeg,png,webp,gif,bmp,ico,heic,zip,rar,7z,arj,tar,gz,bz2,xz,zst,iso,dmg,pdf,swf,jar,apk,mpg,mpeg,mts'''

''nas_bkp='''[[tower@192.168.50.10|''tower@192.168.50.10'']]'':/srv/dev-disk-by-uuid-9b3771d9-c454-4acd-b683-111111111/backup'''
''nas_books='''[[tower@192.168.50.10|''tower@192.168.50.10'']]'':/srv/dev-disk-by-uuid-9b3771d9-c454-4acd-b683-111111111/books'''
''nas_images='''[[tower@192.168.50.10|''tower@192.168.50.10'']]'':/srv/dev-disk-by-uuid-9b3771d9-c454-4acd-b683-111111111/images'''

и так далее

	''# полная синхронизация файлов в каждом каталоге''
	''# с удалением отсутствующих файлов''

''echo -e "\n\n\t14) Dropbox\n"''
''rsync -az --skip-compress=$file_list --exclude='Notebooks/' --delete --verbose -e "ssh -i $ssh_keys" /home/hdd/Dropbox/ $nas_bkp/Dropbox/''

''echo -e "\n\n\t12) Notebooks\n"''
''rsync -az --delete --verbose -e "ssh -i $ssh_keys" /home/hdd/Notebooks/ $nas_books/Notebooks/''

и так далее

	''# дописывание файлов к существующим''

''echo -e "\n\n\t8) Аудиодокументы\n"''
''rsync -a --verbose -e "ssh -i $ssh_keys" /home/hdd/Аудиодокументы/ $nas_bkp/Аудиодокументы/''

''echo -e "\n\n\t7) Аудиокниги\n"''
''rsync -a --verbose -e "ssh -i $ssh_keys" /home/hdd/Аудиокниги/ $nas_books/''

и так далее

	''# бэкап отдельных файлов''

''rsync -a /home/user/.bashrc "$BACKUP_FOLDER"/my-bashrc.txt''
''rsync -a /home/user/.config/mc/menu "$BACKUP_FOLDER"/my-mc-menu.txt''

''echo -e "\n\n\t\nБэкап файлов на NAS завершён. \n"''

===== Слить несколько каталогов в один =====

Может понадобиться заливать в один и тот же каталог на NAS подкаталоги из нескольких разных мест. Для этого нужна последовательность команд rsync с копированием нескольких каталогов в один и тот же. Но если хотя в одной из этих команд будет опция жесткой синхронизации ''--delete'', то все предыдущие файлы в итоговом каталоге будут удалены. Каждая следующая команда будет затирать каталоги, которые принесла предыдущая команда.

Для этого есть обходной путь:

* сперва без ''--delete'' скопировать нужные каталоги в отдельный каталог в /tmp, 
* и уже оттуда синхронизировать всё с удаленным каталогом в NAS вместе с ''--delete''

Пример:

''mkdir -p /tmp/merged_notebooks/''
''rsync -a /home/hdd/Notebooks/ /tmp/merged_notebooks/''
''rsync -a /home/hdd/Dropbox/Notebooks/ /tmp/merged_notebooks/''
''rsync -az --delete -e "ssh -i $ssh_keys" /tmp/merged_notebooks/ $nas_books/Notebooks/''

Но это хорошее решение только для каталогов с //небольшим// размером. Для больших каталогов это будет напряжно. Лучше разделять всë в удаленном каталоге по подкаталогам, потом на стороне NAS физически переместить уже синхронизированные подкаталоги в общий корень, и уже потом синхронизировать каждый подкаталог отдельно с --delete.
