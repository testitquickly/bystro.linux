Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2025-09-24T15:01:17+03:00

====== Pandoc ======

[ @python @doc @pandoc ]

=== Сгенерировать исходники документации из кода через pdoc ===

Это создаст HTML и Markdown (флаг --template-dir можно использовать, чтобы Markdown был чище).

''pdoc --output-dir docs src/''

=== Объединить API-доки с текстовой документацией проекта ===

В docs/ держать свои .md файлы: intro.md, usage.md, faq.md, appendix.md.

Скриптом можно собрать список файлов в правильном порядке.

Пример docs/index.txt

{{{code: id="index.txt" lang="sh" linenumbers="True"
intro.md
usage.md
api/pdoc_output.md
faq.md
appendix.md
}}}

=== Прогонать всё через Pandoc ===

для pdf:

{{{code: id="pandoc_to_pdf" lang="sh" linenumbers="True"
pandoc $(cat docs/index.txt) \
    --from markdown \
    --to pdf \
    --output build/project.pdf \
    --template=templates/custom.latex \
    --toc --toc-depth=3 \
    --number-sections \
    -V papersize=A4 \
    -V mainfont="Liberation Serif" \
    -V monofont="JetBrains Mono"
}}}

для ePub:

{{{code: id="pandoc_to_epub" lang="sh" linenumbers="True"
pandoc $(cat docs/index.txt) \
    --from markdown \
    --to epub3 \
    --output build/project.epub \
    --css=templates/epub.css \
    --toc --toc-depth=3 \
    --metadata title="Project Documentation"
}}}

=== Добавить автоматизацию в Makefile ===

{{{code: id="pandoc_makefile" lang="sh" linenumbers="True"
build: docs/project.pdf docs/project.epub

docs/project.pdf: $(shell cat docs/index.txt)
	pandoc $(shell cat docs/index.txt) \
	    --from markdown \
	    --to pdf \
	    --output $@

docs/project.epub: $(shell cat docs/index.txt)
	pandoc $(shell cat docs/index.txt) \
	    --from markdown \
	    --to epub3 \
	    --output $@
}}}

PDF и ePub по проекту готовы.
