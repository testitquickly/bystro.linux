Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2024-04-23T06:35:57+03:00

====== Kile ======

[ @LaTeX @kile ]

Kile — один из текстовых редакторов для [[LaTeX]].

===== Установка =====

* [[Debian:Install Software:Kile]]
* [[Manjaro:Install Software:Kile]]

===== Настройка =====

==== Базовые настройки ====

Сборка
''> Live Preview = убрать''
	
Сервис
''> Добавлять отметку о порядке байтов (BOM)'' = если есть, то убрать (и впредь следить, чтобы не нажалось даже случайно)
	
Настройка
''> Show document viewer'' = убрать

==== Настроить build ====

Компиляция проектов в Kile будет происходить через вызов внешнего скрипта из исполняемого sh-файла вроде ’''/home/MyScripts/LaTeX/kile_buildPdfLaTeXWithMetafilesOutside.sh''’ по нажатию Alt+1 (дефолтный шорткат).

Можно сделать разные sh-файлы — один для сборки с xelatex, другой для сборки с pdflatex. Их можно указать в разных сборках в Kile. И тогда проект в xelatex можно собирать по Alt+1, а проект pdflatex по Alt+2…

Иногда может быть удобнее настроить механизм сборки проекта в каждом проекте по-отдельности. Лучше этого не делать.

''Проект'' 
''> Настроить проект''
''> Свойства''
''> Конфигурация QuickBuild''
''> выбрать нужный движок''

Лучше оставить там опцию «(use global settings)» и управлять сборкой проектов централизовано.

Теперь сборка будет происходить по нажатию стандартного Alt+1.

==== Настройка компиляции через вызов консоли ====

Способ логичный, но есть неприятные моменты, поэтому использовать его не надо:

1. при КАЖДОЙ компиляции будет открываться, быстро пролистываться и закрываться консольное окно.
2. в исполняемом файле есть команда для принудительного открытия файла в evince. При вызове в консоли команда работает. При вызове из Kile открытие evince или не происходит, или, вероятно, происходит, но после закрытия консоли evince, как полагается подчиненному процессу, тоже закрывается настолько быстро, что кажется, что он и не открывался.

''Настройка''
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
''> QuickBuild''
''> Конфигурация для инструмента QuickBuild = «Konsole XeLaTex+ViewPDF»''
''> Дополнительно''
	''Тип = Запускать в Konsole''
	''Класс = Compile''
''> Главное''
''> Команда = полный путь к исполняемому скрипту — /home/MyScripts/LaTeX/kile_buildPdfLaTeXWithMetafilesOutside.sh''
''> [OK]''

==== Настройка компиляции средствами Kile ====

=== Сбросить всё к исходным параметрам ===

Сперва всё очистим и сбросим к исходным параметрам.

''Настройка''
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
''> [Восстановить стандартные инструменты]''

=== Настроить инструмент XeLaTeX ===

Тут два пути
* отредактировать существующий QuickBuild
* сделать отдельный инструмент, который потом будет прописан в QuickBuild

Первый проще, второй грамотнее.

''Настройка''
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
> Создать

Назову его «myScript».
Главное = полный путь к скрипту сборки
Class = QuickBuild

Главное 
> Инструмент = myScript
> Конфигурация = Default

Дополнительно
> ''Тип = Запускать вне Kile''
	''Класс = Compile''
	''Выходное расширение = pdf''

Перейти 
''Настройка''
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
> QuickBuild
> Select = LaTeX
> Главное
> Инструмент = myScript
> [Добавить]

Убрать все остальные инструменты (через [Удалить]).

Дополнительно
	''Тип = Запускать вне Kile''
	''Класс = Compile''
	''Выходное расширение = pdf''

По-умолчанию в инструменте ’XeLaTeX’ класс = ’LaTeX’. Но из-за моей схемы с компилированием через внешний файл Kile будет обязан выбрасывать сообщение об ошибке 

''«Открыть файл журнала не удалось; вы запускали LaTeX?»''

И да, с точки зрения Kile никто LaTeX не запускал и Kile будет «зависать» в ожидании моего ответа на свой вопрос. И если я сделаю изменения в файлах и снова запущу компиляцию, он ничего не сделает, бо на предыдущий вопрос не было ответа — а там надо было нажать Esc.

А если класс = Compile, то Kile выбросить сообщение об ошибке, и после этого сразу объявит о том, что выполнение [XeLaTeX] прервано. И дальше всё работает безупречно.

Всё остальное не трогать.

=== Настроить инструмент ViewPDF ===

Можно пропустить, ведь открытие pdf прописано в моем внешнем скрипте. 

К тому же, из-за моей схемы с компилированием через внешний файл Kile будет обязан выбрасывать сообщение об ошибке 

''«[ViewPDF] Файл /путь_к_нему/main.pdf не существует; вы скомпилировали исходный файл?»'' 

А этот файл и не должен существовать, мой скрипт его уже переименовал и скопировал в корень каталога проекта, и evince откроет его, ориентируясь по его новому имени. И если класс будет указан «LaTeX», то Kile будет «зависать» в ожидании моего ответа на свой вопрос. И если я сделаю изменения в файлах и снова запущу компиляцию, он ничего не сделает, бо на предыдущий вопрос не было ответа — там надо было нажать Esc.

''Настройка''
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
''> ViewPDF''
''> Конфигурация для инструмента ViewPDF''
	''Select = evince''
''> Дополнительно''
	''Тип = Use document viewer''
	''Класс = View''
	''Source Extention = pdf''
	''Выходное расширение = pdf''
	
Всё остальное не трогать.

=== Изменить последовательность действий в QuickBuild ===

''Настройка''
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
''> [Создать] = назвать «QuickBuild»''
''> Конфигурация для инструмента QuickBuild = «Default»''
''> Дополнительно''
	''Тип = Запустить последовательность команд''
	''Класс = Sequence''
''> Главное''
''> Инструмент = XeLaTex''
''> [Добавить] (в списке действий появится 'XeLaTeX')''
''[OK]''

Обычно в QuickBuild вместе с инструментом ’XeLaTex’ добавляют инструмент ’ViewPDF’. Его настройки такие:
	Проверять главный документ = галочка
	Переходить к первой ошибке = галочка
	Автоматически запускать дополнительные параметры = убрать галочу

Но в моём случае без этого инструмента можно обойтись.

==== Скомпилировать проект ====

Открыть проект в Kile. 

Открыть файл main.tex

''Настройка''
''> Сделать текущий документ «главным»''

Нажать Alt+1. 

Убедиться в том, что ошибок нет и документ компилируется.

==== Настроить build через внешний sh-скрипт ====

	*todo Kile Настроить build через внешний sh-скрипт

===== Базовые настройки Kile =====

''Build'' 
''> Live Preview'' 
Убрать галочку 'Live Preview for Current Document or Project'

Настройка 
> убрать галочку для 'Show Document Viewer'

Настройка 
> Настроить Kile

Сразу самое важное:

''Editor'' 
''> Открытие и сохранение'' 
''> Главное'' 
''> Формат файла'' 
> убедиться триста раз в том, что СНЯТА галочка для «Использовать отметку о порядке байтов (BOM)», иначе позже будет беда. Всё остальное в разделе Editor настраивать по личным предпочтениям.

Также в будущем быть осторожным и не ставить галочку в Сервис > Добавлять отметку о порядке байтов (BOM)

''Сервис'' 
''> Орфография'' 
> снять галочку для «Автоматическая проверка орфографии»

''Настройка'' 
''> Настроить Kile'' 
''> Kile'' 
''> General'' 
''> Default project location'' 
> указать свой каталог для проектов

''Настройка'' 
''> Настроить Kile'' 
''> Kile'' 
''> General'' 
''> File Clean-Up Details'' 
> поставить галочку для Automatically clean-up files after closing Kile

В поле списка расширений автоудаляемых файлов добавить этот перечень:
.aux .backup .bbl .bib~ .bit .blg .dvi .gitignore~ .glg .glo .gls .glx .gxg .gxs .gz .idx .ilg .ind .lof .log .lot .nav .out .plt .ps .sh~ .snm .sty~ .svn .tex~ .toc .xdy

''Настройка'' 
''> Настроить Kile'' 
''> Kile'' 
''> Help'' 
> Location of TeX documentation: [[/opt/LaTeX/texmf-dist/doc/texlive/texlive-ru]]

''Настройка'' 
''> Настроить Kile'' 
''> Kile'' 
''> Live Preview'' 
> снять галочку для Enable live preview

''Настройка'' 
''> Настроить Kile'' 
''> LaTeX'' 
''> General'' 
''> Double Quotes'' 
> снять галочку для Automatically insert opening and closing double quotes for LaTeX

''Настройка'' 
''> Настроить Kile'' 
''> LaTeX'' 
''> Environments'' 
''> Automatic Indentation Inside Environments'' 
> снять галочку для Use spaces instead of tabs to indent

''Настройка'' 
''> Настроить Kile'' 
''> Tools'' 
''> Build''

Тут сделаем магию. QuickBuild подразумевает выполнение двух команд последовательно: PDFLaTeX + ViewPDF

Команда PDFLaTeX подразумевает выполнение команды pdflatex с параметрами ''-synctex=1 -interaction=nonstopmode %source''

Команда ViewPDF подразумевает выщов внутренне определенного просмотрщика PDF (обычно Okular) с передачей ему скопмилированного файла pdf. 

Внешне выглядит так: инициировал компиляцию проекта из Kile — открылся готовый pdf.

Мне надо, чтобы компиляция pdf происходила через мой .sh скрипт. Поэтому

Настройка > Настроить Kile > Tools > Build > PDFLaTeX > General > Command: /home/my_System_Settings/MyScripts/LaTeX_Scripts/kile_buildPdfLaTeXWithMetafilesOutside.sh

Содержимое поля Options (-synctex=1 -interaction=nonstopmode %source) можно убрать.

''Настройка'' 
''> Настроить Kile'' 
''> Tools'' 
''> Build'' 
''> ViewPDF'' 
''> Select: okular''

''Tools'' 
''> Build'' 
''> New = myPDF_Compile'' 
''> Next'' 
''> Finish''

В настройках билд-тула myPDF_Compile > General > Command: = путь к исполняемому скрипту
/home/SystemSettings/MyScripts/LaTeX_Scripts/kile_buildPdfLaTeXWithMetafilesOutside.sh

''Advanced'' 
''> Type = Run Outside of Kile''
''Class = Compile''

''Tools'' 
''> Build'' 
''> QuickBuild'' 
> протыкать опции PDFLaTeX и ViewPDF и удалить каждую.

Tool: выбрать из списка myPDF_Compile (будет в самом низу).
Configuration: Current Default (Default) > Add > OK
В окне Kile выбрать кнопку QuickBuild или нажать Alt+1

==== Kile missing “Settings” dialog ====

Во второй версии Kile бывало, что тулбар с управляющими кнопками исчезал. Решалось это удалением файла с настройками тулбара:

''rm ~/.kde/share/apps/kile/kileui.rc''

Если интересно, есть и другие файлы настроек Kile в профиле пользователя — хорошо бы их иногда бэкапить:

1. Kile configuration
''~/.kde/share/config/kilerc''

2. Kile shortcuts
''~/.kde/share/apps/katepart/katepartui.rc''

==== Как добавить новые команды в меню ====

''LaTeX'' 
''> Edit User menu''

[Вставить] — указать название нового пункта меню (''qwe'')

Type: Текст
Entry: qwe
Text: ввести текст, который будет вставлен в файл при нажатии этого пункта меню (''\ruq{}'')


Save As 
> выбрать место, где будет сохранён xml-файл с новым меню. По-умолчанию: ''~/.local/share/kile/usermenu/''
> сохранить (создать) файл с названием своего user menu

В окне Edit User Menu нажать [Install] — новое меню появится в 

''LaTeX'' 
''> User menu''

Можно отредактировать одно из существующих меню и добавить на него новую кнопку (''qwe'').

Неудобство (вероятно, недоработка) — если что-то поменять в существующих кнопках/командах, то нельзя просто сохранить изменения, почему-то это невозможно. Надо действовать через Save As и перезаписать существующий xml-файл.

Можно переместить пользовательское меню из-под меню «LaTeX» на верхний уровень:

''Настройка''
''> Настроить Kile''
''>  User Menu''
''> Location''
''> Show the user menu in the menu bar''

На той же странице можно увидеть, какое из пользовательских меню в данный момент подключено.

==== Настроить build через внешний sh-скрипт ====

	*todo ! Kile - компиляция файлов через внешний скрипт

==== Шорткаты ====

Настройка > Комбинации клавиш

найти «Перетаскивание» > обнулить комбинацию клавиш для этой команды

QuickBuild = Alt+1

==== Комментирование строки ====

Компонент Kate
Закомментировать или раскомментировать
	Внимание, там две опции «Закомментировать или раскомментировать». Выбрать вторую, где по-умолчанию ’Crtl+/’.
Назначить удобное сочетание (Ctrl+D)

--------------------

	*todo Kile — перевод

For now I could solve the issue where Kile can find the Tex Live 2020 binaries (manually installed) when it is run from graphical menu or launcher icon. I am listing the two solutions I found (links are provided below):

	Open Settings --> Configure Kile window. Click on the menu Build. It will list all of the known TeX tools. For example, select LaTeX. Go to the General tab and add the texlive binaries PATH in command field to include /latex, which will then look like this: /usr/local/texlive/2020/bin/x86_64-linux/latex

The above steps are repeated for each of the TeX tools we use frequently.

Once all are done run Settings --> System Check to see if Kile executes the LaTeX processes from the PATH assigned.

(Step 1 is explained in detail here).

	The second solution is to edit the file /etc/login.defs:

ENV_SUPATH  PATH=/usr/local/texlive/2020/bin/x86_64-linux:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV_PATH  PATH=/usr/local/texlive/2020/bin/x86_64-linux:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games

This solution was suggested to me here on raising a similar question for a TeX software (LaTexDraw). It too had similar issue like Kile.

I find Step 2 to work with any of TeX software (atleast for the two I have) where on starting it from graphical menu or launcher icon, it can locate all the latest LaTeX binaries.

===== Настроить Kile =====

Основные: 

	Сборка
	''> Live Preview = убрать''
	
	Сервис
	''> Добавлять отметку о порядке байтов (BOM)'' = убрать и впредь следить, чтобы не нажалось даже случайно
	
	Настройка
	''> Show document viewer'' = убрать

Прочие настройки по вкусу.

Самое главное — настроить build. 

	Компиляция проектов в Kile будет происходить через вызов внешнего скрипта из исполняемого sh-файла ’''/home/MyScripts/LaTeX/kile_buildPdfLaTeXWithMetafilesOutside.sh''’ по нажатию Alt+1 (дефолтный шорткат).

	Можно сделать разные sh-файлы — один для сборки с xelatex, другой для сборки с pdflatex. Их можно указать в разных сборках в Kile. И тогда проект в xelatex можно собирать по Alt+1, а проект pdflatex по Alt+2…

	Но удобнее настроить механизм сборки проекта в каждом проекте по-отдельности. 
	Проект 
	> Настроить проект
	> Свойства
	> Конфигурация QuickBuild
	> выбрать нужный движок

	Теперь сборка будет происходить по нажатию стандартного Alt+1 — не промахнёшься.

Можно или (1) указать одну команду, и на этом всё, или (2) попереключаться между несколькими инструментами внутри Kile. Второй вариант лучше.

==== Настройка компиляции через вызов консоли ====

Способ логичный, но есть моменты: 
1. при КАЖДОЙ компиляции будет открываться, быстро пролистываться и закрываться консольное окно.
2. в исполняемом файле есть команда для принудительного открытия файла в evince. При вызове в консоли команда работает. При вызове из Kile открытие evince или не происходит, или, вероятно, происходит, но после закрытия консоли evince, как полагается подчиненному процессу, тоже закрывается настолько быстро, что кажется, что он и не открывался.

''Настройка''
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
''> QuickBuild''
''> Конфигурация для инструмента QuickBuild = «Konsole XeLaTex+ViewPDF»''
''> Дополнительно''
	''Тип = Запускать в Konsole''
	''Класс = Compile''
''> Главное''
''> Команда = полный путь к исполняемому скрипту — /home/MyScripts/LaTeX/kile_buildPdfLaTeXWithMetafilesOutside.sh''
''> [OK]''

==== Настройка компиляции средствами Kile ====

=== Сбросить всё к исходным параметрам ===

Сперва всё очистим и сбросим к исходным параметрам.

''Настройка''
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
''> [Восстановить стандартные инструменты]''

=== Настроить инструмент XeLaTeX ===

'''
Настройка
> Настроить Kile
> Инструменты
> Сборка
> Список инструментов
> XeLaTeX
> Главное
	Команда = полный путь к исполняемому sh-файлу.
> Дополнительно
	Тип = Запускать вне Kile
	Класс = Compile
	Выходное расширение = pdf
'''

По-умолчанию в инструменте ’XeLaTeX’ класс = ’LaTeX’. 

	Но из-за моей схемы с компилированием через внешний файл Kile будет обязан выбрасывать сообщение об ошибке 

	''«Открыть файл журнала не удалось; вы запускали LaTeX?»''

	И да, с точки зрения Kile не запускал. А дальше Kile будет «зависать» в ожидании моего ответа на свой вопрос. И если я сделаю изменения в файлах и снова запущу компиляцию, он ничего не сделает, бо на предыдущий вопрос не было ответа — а там надо было нажать Esc.

	А если класс = Compile, то Kile выбросить сообщение об ошибке, и после этого сразу объявит о том, что выполнение [XeLaTeX> прервано. И дальше всё работает безупречно.

Всё остальное не трогать.

=== Настроить инструмент ViewPDF ===

Можно пропустить, ведь открытие pdf прописано в моем внешнем скрипте. 

К тому же, из-за моей схемы с компилированием через внешний файл Kile будет обязан выбрасывать сообщение об ошибке 

''«[ViewPDF] Файл /путь_к_нему/main.pdf не существует; вы скомпилировали исходный файл?»'' 

А этот файл и не должен существовать, мой скрипт его уже переименовал и скопировал в корень каталога проекта, и evince откроет его, ориентируясь по его новому имени. И если класс будет указан «LaTeX», то Kile будет «зависать» в ожидании моего ответа на свой вопрос. И если я сделаю изменения в файлах и снова запущу компиляцию, он ничего не сделает, бо на предыдущий вопрос не было ответа — там надо было нажать Esc.

''Настройка''
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
''> ViewPDF''
''> Конфигурация для инструмента ViewPDF''
	''Select = evince''
''> Дополнительно''
	''Тип = Use document viewer''
	''Класс = View''
	''Source Extention = pdf''
	''Выходное расширение = pdf''
	
Всё остальное не трогать.

=== Изменить последовательность действий в QuickBuild ===

''Настройка''
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
''> [Создать] = назвать «QuickBuild»''
''> Конфигурация для инструмента QuickBuild = «Default»''
''> Дополнительно''
	''Тип = Запустить последовательность команд''
	''Класс = Sequence''
''> Главное''
''> Инструмент = XeLaTex''
''> [Добавить] (в списке действий появится 'XeLaTeX')''
''[OK]''

Обычно в QuickBuild вместе с инструментом ’XeLaTex’ добавляют инструмент ’ViewPDF’. Его настройки такие:
	Проверять главный документ = галочка
	Переходить к первой ошибке = галочка
	Автоматически запускать дополнительные параметры = убрать галочу

Но в моём случае без этого инструмента можно обойтись.

==== Скомпилировать проект ====

Открыть проект в Kile. 

Открыть файл main.tex

Настройка
''> Сделать текущий документ «главным»''

Нажать Alt+1. 

Убедиться в том, что ошибок нет и документ компилируется.

==== Настроить build через внешний sh-скрипт ====

	todo Kile Настроить build через внешний sh-скрипт


--------------------


For now I could solve the issue where Kile can find the Tex Live 2020 binaries (manually installed) when it is run from graphical menu or launcher icon. I am listing the two solutions I found (links are provided below):

	Open Settings --> Configure Kile window. Click on the menu Build. It will list all of the known TeX tools. For example, select LaTeX. Go to the General tab and add the texlive binaries PATH in command field to include /latex, which will then look like this: /usr/local/texlive/2020/bin/x86_64-linux/latex

The above steps are repeated for each of the TeX tools we use frequently.

Once all are done run Settings --> System Check to see if Kile executes the LaTeX processes from the PATH assigned.

(Step 1 is explained in detail here).

	The second solution is to edit the file /etc/login.defs:

ENV_SUPATH  PATH=/usr/local/texlive/2020/bin/x86_64-linux:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV_PATH  PATH=/usr/local/texlive/2020/bin/x86_64-linux:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games

This solution was suggested to me here on raising a similar question for a TeX software (LaTexDraw). It too had similar issue like Kile.

I find Step 2 to work with any of TeX software (atleast for the two I have) where on starting it from graphical menu or launcher icon, it can locate all the latest LaTeX binaries.

===== Шрифты для редактора =====

* IBM Plex Sans
* Cantarell
* CMU Sans Serif

