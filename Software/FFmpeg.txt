Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2024-12-19T08:25:09+02:00

====== FFmpeg ======

[ @audio @pulseaudio @jabra ]

„FFmpeg” — набор свободных библиотек для обработки видео и аудио. Включает в себя ''libavcodec'' (библиотеку кодирования и декодирования аудио и видео) и ''libavformat'' (библиотеку мультиплексирования и демультиплексирования в медиаконтейнер). 

В принципе FFmpeg  по-умолчанию установлен в Linux, но базовая комплектация ограничена.

Есть очень много трюков, которые можно сделать через FFmpeg в консоли…

===== Установить =====

* [[Debian:Install:FFmpeg]]

===== Запись с микрофона в консоли =====

==== Проверить здоровье PulseAudio ====

''systemctl --user status pulseaudio''

Разобраться с [[+Настройка PulseAudio]], если будут сообщения вроде

''pulseaudio[1293]: Module "module-udev-detect" should be loaded once at most. Refusing to load.''
''pulseaudio[1293]: Error opening PCM device front:0: Устройство или ресурс занято''

==== Определить устройство записи ====

Из любопытства можно заюзать

''alsamixer''

Выбрать карту через клавишу F6 и убедиться в том, что она отображается. Можно ещё настроить громкость для выбранного устройства (клавишами up/down). Esc чтобы выйти.

По-серьёзному надо так

''arecord -l''

Пример ответа:

''*'' **''List of CAPTURE Hardware Devices''** ''**''
''card 0: USB [Jabra SPEAK 410 USB], device 0: USB Audio [USB Audio]''
''Subdevices: 1/1''
''Subdevice #0: subdevice #0''
''card 3: Generic_1 [HD-Audio Generic], device 0: ALC897 Analog [ALC897 Analog]''
''Subdevices: 1/1''
''Subdevice #0: subdevice #0''

Смотрим первую запись (Jabra):
* ''card 0'' — номер звуковой карты.
* ''device 0'' — номер (первого) устройства на звуковой карте (или на источнике звука).

Ок, нужное мне устройство записи (Jabra) называется ''hw:0,0''

==== Узнать параметры записи на устройстве записи ====

''arecord -D hw:0,0 --dump-hw-params''

Внимательно смотреть в ответ

''FORMAT:  S16_LE''
''SAMPLE_BITS: 16''
''FRAME_BITS: 16''
''CHANNELS: 1''
''RATE: 16000''

Это значит
* Кодек: PCM S16 LE (стандартный для wav)
* Частота дискретизации: 16 кГц. Увы. И задавать её выше этого порога нет смысла; хватит для голосовых заметок и укладывается в требования к аудиофайлам для [[Common:LLM:Whisper]]
* Бит: 16

==== Сделать запись ====

При обращении к устройству можно использовать разные драйверы. Устройство можно назвать или ''hw:0,0'', или ''plughw:0,0''. Скорее всего будет работать второй вариант.

Сперва надо задать чувствительность микрофона, затем вызвать запись через ffmpeg:

''amixer set Capture 80%; ffmpeg -f alsa -i plughw:0,0 -channels 1 -ar 16000 -sample_fmt s16 "output_$(date +\%Y-\%m-\%d\_\%H-\%M).wav"''

Запись происходит с дискретностью 16 кГц, сколько её ни фильтруй, в принципе будет всего лишь удовлетворительного качества (для голоса).

Итоговую команду записи надо перепроверить после перезагрузки компьютера, и если всё работает — закатать её под удобный алиас в ''.bashrc''

==== Прекратить запись ====

Два способа:
* через клавишу ''q''
* через ''Ctrl+C''.

В обоих случаях FFmpeg корректно завершит запись и сохранит всё в объявленный файл. 

Важно учесть неочевидное — последние три секунды не будут записаны, поэтому перед остановкой записи надо ~~молча~~ посчитать до пяти.

=== Что любопытно ===

Можно выставить таймер для записи в секундах: ''-t 30'' остановит запись через 30 секунд.

Если ещё раз вызвать команду записи, или закрыть консоль и вызвать её в другом окне консоли, то скорее всего ответ будет 

''cannot open audio device plughw:0,0 (Device or resource busy)''
''plughw:0,0: Input/output error''

Если настойчиво вызвать эту команду ещё раз (и ещё), ничего не меняя, то в какой-то момент устройство начнёт запись.

Но лучше проверить, кем/чем занято устройство

''fuser -v /dev/snd/*''

Чекнуть PID (например, ''1234'') и убить этот процесс

''kill -9 1234''

==== Проверить запись ====

''ffplay output.wav''

В Audacity этот файл будет воспроизведен на повышенной скорости — файл же записан с частотой 16 кГц, а в Audacity по-умолчанию установлена частота 44,1 кГц. Сперва надо в Audacity Проект > Настройки проекта > Частота дискретизации = 16000 Гц.

===== Применить фильтры =====

Иногда можно записывать звук сразу с цепочкой фильтров для улучшения качества записи, защиты от перегрузки, сглаживания динамики и повышения четкости.

Например:
* **compand** — компрессия динамического диапазона для сглаживания громкости. compand=0.3|0.8:12|2:-90/-60/-20:0.2:1.0 = threshold 12 dB, ratio 2:1, attack_time 0.3 секунд, release_time 0.8 секунд, soft_knee -90/-60/-20, gain 0.2:1.0
* **highpass** — фильтрация низких частот, будут удалены все звуки ниже 80 Гц.
* **loudnorm** — нормализация громкости для выравнивания уровней.
* **afftdn** — подавление окружающего шума.
* **equalizer** — эквалайзер с примером принудительного увеличения громкости на 5 дБ на частоте 1000 Гц.

''amixer set Capture 75%; ffmpeg -f alsa -i plughw:0,0 -channels 1 -ar 16000 -sample_fmt s16 -filter:a "loudnorm,highpass=f=80,compand=0.3|0.8:12|2:-90/-60/-20:0.2:1.0" "$(date +\%Y-\%m-\%d\_\%H-\%M).wav"''

Не надо включать сразу все фильтры, их надо применять только КОГДА они действительно нужны. Если надо что-то отфильтровать — постпродакшн в [[Audacity]] Если нужна высокая четкость записи — записывать с мощного микрофона напрямую в Audacity.

==== Про highpass filter ====

Уровень зависит от контекста и обстоятельств. 

80 Гц
* для мужского голоса
* для вокала, где басы важны

120 Гц
* для женского голоса
* если вокал в миксе "захлебывается" от низов
* при сильном низкочастотном шуме (гул, вибрации)

Рекомендуется постоянно использовать 80 Гц, но если лишний шум на записи сохраняется — медленно поднимать частоту фильтра до тех пор, пока не найдется баланс, в котором шум устраняется, а звук остается естественным.
