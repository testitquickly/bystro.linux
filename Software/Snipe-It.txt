Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2025-09-25T23:35:12+03:00

====== Snipe-It ======

[ @web @snipeit @php @инвентаризация ]

Inventory portal — веб-приложение для учета компьютеров, железа и лицензий в небольшой организации. Можно установить на сервере как постоянный сервис (PHP на фреймворке Laravel), а можно запускать при необходимости через [[Docker]].

===== Установить =====

* [[Debian:Install:Snipe-It]]

===== Настроить портал =====

Это типичное веб-приложение, поэтому должен быть опыт в их запуске и настройке.

==== DB ====

Автоматический процесс, все уже было настроено в ''docker-compose.yml''

==== Админ ====

Потыкать по полям.

==== Приложение ====

Детальные настройки см. https://snipe-it.readme.io/docs/linuxosx

Можно заморочиться с url, чтобы проект открывался не по http://localhost:8090, а по http://inventory.local:8090

Сперва локально — добавить запись об этом в

''sudo mcedit /etc/hosts''

На новой строке:

''127.0.0.1       inventory.local''

Сохранить, выйти.

Если надо, чтобы все устройства в сети заходили на ''inventory.local'' — привязать этот адрес к IP сервера в настройках роутера.

Важно помнить, что приложение по-умолчанию поднято на http, и для доступа снаружи надо отдельно поставить сертификат SSL, или в принципе пользоваться всем этим только внутри сети.

В настройках портала можно задать название, картинку лого, общий цвет и всякое другое. 

В настройках каждого пользователя отдельно настраивается язык приложения.

==== Запуск ====

В файл ~/.bashrc добавить команды

	''# включить докер с Snipe-It''
'''
alias inventory+="cd ~/workspace/docker/snipeit && docker compose up -d && echo -e '\nhttp://inventory.local:8090\n'"
'''
	''# отключить докер с Snipe-It''
''alias inventory-="cd ~/workspace/docker/snipeit && docker compose down && echo -e '\nДокер погашен\n'"''

===== Настроить сущности в проекте =====

В самом начале в базе пусто, надо сперва последовательно заполнить какие-то общие поля, поэтому лучше сперва подготовить себе исчерпывающий общий план всего, что дожно быть.

Для начала можно заполнить базу демонстрационными записями: https://snipe-it.readme.io/docs/seeding-the-database (все существующие будут затёрты).

==== Вручную ====

Начать с Settings > Categories

После добавить Settings > Custom Fields

Несколько заморочный этап, но как сделаешь, так оно и будет работать.

==== Скриптом ====

Надо создать CSV для Models (типы железа). Потом для Assets (реальные устройства), где указываешь ссылку на модель. И отдельно для «кастомных полей» (например, размер HDD) — но их надо заранее завести в админке.

Также можно сделать файл в JSON и импортировать его содержимое. Можно сделать и YAML, но его потом надо будет переконвертировать в JSON, который потом будет переделан в CSV…

Пример CSV см. https://snipe-it.readme.io/docs/importing#sample-csv-downloads Внимательно см. предупреждение о том, что механизм импорта не особо силён и можно легко понаплодить лишних сущностей.

В принципе надо по-отдельности:

* Importing Users
* Importing Assets
* Importing Asset Models
* Importing Licenses
* Importing Accessories
* Importing Components
* Importing Consumables
* Importing Locations
* Importing Categories
* Importing Suppliers
* Importing Manufacturers

Есть смысл сперва потренироваться на малых мощностях или выгружая то, что есть в каждом разделе, или на примерах из https://github.com/grokability/snipe-it/tree/master/sample_csvs 

Экспортированные данные в CSV не отменяют необходимость регулярного бэкапа БД snipe-it в отдельный sql-файл.
 
