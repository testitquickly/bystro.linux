Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2024-11-11T22:09:50+02:00

====== ToDo в консоли ======

[ @console @todolist ]

Любая система «туду» хороша, если список дел постоянно перед глазами. Я придумал простой способ добавить самому себе напоминалки о чём-то, что нужно сделать, глядя в консоль — прямо в консоль.

Проекты, даты, приоритет и прочее — ничего этого нет и не будет; если надо, то см. [[taskwarrior]]

===== Базовый подход =====

Сделать текстовый файл:

''mcedit ~/todo.txt''

Добавить в него одну и более строк с задачами. Обязательно добавить одну пустую строку в конце, это нужно для грамотного вывода содержимого файла в консоль.

Отредактировать файл ''.bashrc''

''mcedit ~/.bashrc''

В самую последную строку этого файла добавить вызов содержимого из ''todo.txt'':

	''# Вывод содержимого в консоль''
''cat ~/todo.txt''

Весь смысл в том, что отныне при открытии каждого окна Konsole (или при логине под моим юзером в консоль в другом tty; или при каждом перечитывании «''source ~/.bashrc''») первые строки вывода в консоли будут заполнены содержимым из ''~/todo.txt''

==== Добавить задачу ====

Открыть файл

''mcedit ~/todo.txt''

и прописать там всё, что нужно. 

Можно добавлять записи не открывая сам файл:

''echo 'Положить диафильмы в коробку' >> ~/todo.txt''

Внимание к символам: 
''>'' — уберет из файла всё содержимое и добавит в него новую строку
''>>''  — оставит содержимое файла и добавит новую строку в конце файла

Текст для ''echo'' можно не обрамлять кавычками, но лучше да, чтобы не нарушать здоровые привычки.

==== Удалить задачу ====

Открыть файл

''mcedit ~/todo.txt''

и отредактировать там всё, что нужно. 

Или, не заходя в файл, удалить, например, третью строку:

''sed -i '3d' ~/todo.txt''

===== Продвинутый подход =====

Превратить базовые команды в функции и сделать это постоянным:

''mcedit ~/.bashrc''

Добавить в конце ''~/.bashrc'' все эти строки:

{{{code: id="todo_in_console" lang="sh" linenumbers="True"
myToDoFile=/home/astenix/todo.txt

	# Добавить строку в файл todo.txt
todo() {
	# высчитываем количество строк в файле
	line_number=$(wc -l < $myToDoFile)
    
		# Добавляем номер следующей строки в формате '1)' в файл
	echo "$((line_number + 1))) $*" >> $myToDoFile

	clear

	cat $myToDoFile
}

	# Удалить строку из файла todo.txt
todorm() {
	# Если файл пуст — просто показать его содержимое
	if [ ! -s "$myToDoFile" ]; then
		cat "$myToDoFile"
		return
	fi

	# Подсчитать количество строк
	local total_lines
	total_lines=$(wc -l < "$myToDoFile")

	# Если номер строки некорректен — просто показать содержимое файла
	if [ "$1" -gt "$total_lines" ] || [ "$1" -lt 1 ]; then
		cat "$myToDoFile"
		return
	fi

	# Если номер строки корректен — Удалить указанную строку 
	# и вынести содержимое файла во временный файл
	local tmpfile=$(mktemp)
	sed "${1}d" "$myToDoFile" > "$tmpfile"

	# Внутри временного файла перенумеровать строки 
	# и записать результат обратно в файл todo.txt
	awk '{
		sub(/^[0-9]+[)] /, "")
		printf("%d) %s\n", ++n, $0)
	}' "$tmpfile" > "$myToDoFile"

	clear

	# Показать результат
	cat "$myToDoFile"
}

	# Алиасы для ошибок при наборе
alias туду='todo'
alias ещвщ='todo'
alias тудурм='todorm'
alias ещвщкь='todorm'

	# Показать список задач при открытии консоли
cat $myToDoFile
}}}

Сохранить, выйти, перечитать содержимое файла:

''source ~/.bashrc''

==== Добавить задачу ====

''todo Положить диафильмы в коробку''

И даже кавычки не нужны.

==== Удалить задачу ====

Ориентируемся по номерам строк. Например, удалить задачу №2:

''todorm 2''

===== Ограничения =====

Нельзя передавать этому скрипту где-либо в строке символ „''*''” → он принудительно вставляет в файл вызов команды ''ls''

И вот список символов, которые можно, но незачем использовать:

''`''
''~''
''#''
''&''
''*''
''(''
'')''
'';''
'''''
''"''
''\''

А вот эти вполне можно, хотя тоже незачем:

''!''
''@''
''$''
''%''
''^''
''/''
''=''
''_''

===== Безопасность файла Туду =====

Имеет смысл держать файл с Туду в Dropbox. 

В принципе можно в файле ''~/.bashrc''  указать ''myToDoFile=/home/astenix/Dropbox/todo.txt''

Но я предпочитаю постоянно видеть ''todo.txt'' в каталоге профиля. Поэтому: 

* положить файл ''todo.txt'' в Dropbox
* в каталоге своего профиля сделать на него симлинк

''ln -s /home/astenix/Dropbox/todo.txt''
