Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2025-10-14T21:29:37+03:00

====== планшет Huion h640p ======

[ @digimen @huion @планшет ]

Перьевой управлятельно-рисовальный планшет Huion H640P Inspiroy прекрасно работает в Linux под общими драйверами для планшетов типа Wacom из проекта digimend-kernel-drivers.

Где рисовать — [[Software:MyPaint]]

Не факт, что всё это будет работать под Wayland, по-умолчанию всем управляет libinput X.org driver (xserver-xorg-input-libinput в Debian).

===== Установить =====

* [[Debian:Install:Планшет для рисования]]

===== Номера кнопок планшета =====

Проверить коды кнопок на планшете с именем “Pad pad id=16” (не забыть о том, что это временно). Выполнить в терминале:

''xinput test 16''

и на планшете нажать последовательно на каждую кнопку. Вероятный ответ:

''button press   1 a[3]=0 a[4]=0 a[5]=0 a[6]=0'' 
''motion a[3]=0 a[4]=0 a[5]=0 a[6]=0'' 
''button release 1 a[3]=0 a[4]=0 a[5]=0 a[6]=0'' 
''motion a[3]=0 a[4]=0 a[5]=0 a[6]=0'' 
''button press   2 a[3]=0 a[4]=0 a[5]=0 a[6]=0'' 
''motion a[3]=0 a[4]=0 a[5]=0 a[6]=0''  

и тд. 

Прервать процесс через ''Ctrl+C'' или ''Ctrl+Z''.

Выцепляем строки с “button press”:

1. button press   1 a[3]=0…
2. button press   2 …
3. button press   3 
4. button press   8 
5. button press   9 
6. button press   10 

Ок, шесть кнопок на планшете отзываются под номерами 

1. ''1''
2. ''2''
3. ''3''
4. ''8''
5. ''9''
6. ''10'' 

Почему так — у каждого устройства-планшета может не быть, а может быть какое-то количество физических кнопок. Драйвер Wacom по-умолчанию считает, что у планшета есть 20 кнопок, и для каждой он резервирует отдельный слот. Проверить свой планшет:

''xinput list-props 16''

Пример ответа:

{{{code: lang="sh" linenumbers="True"
Device 'HID 256c:006e Pad pad':
        Device Enabled (164):   1
        Coordinate Transformation Matrix (166): 1.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 1.000000
        Device Accel Profile (296):     0
        Device Accel Constant Deceleration (297):       1.000000
        Device Accel Adaptive Deceleration (298):       1.000000
        Device Accel Velocity Scaling (299):    10.000000
        Device Node (288):      "/dev/input/event16"
        Wacom Serial IDs (454): 110, 17, 15, 17, 15
        Wacom Serial ID binding (602):  0
        Wacom Pressure Threshold (603): 0
        Wacom Sample and Suppress (604):        2, 4
        Wacom Enable Touch (605):       0
        Wacom Enable Touch Gesture (606):       0
        Wacom Touch Gesture Parameters (607):   0, 0, 250
        Wacom Tool Type (608):  "PAD" (601)
        Wacom button action 0 (609):    1572865
        Wacom button action 1 (610):    1572866
        Wacom button action 2 (611):    1572867
        Wacom button action 3 (612):    1572872
        Wacom button action 4 (613):    1572873
        Wacom button action 5 (614):    1572874
        Wacom button action 6 (615):    1572875
        Wacom button action 7 (616):    1572876
        Wacom button action 8 (617):    1572877
        Wacom button action 9 (618):    1572878
        Wacom button action 10 (619):   1572879
        Wacom button action 11 (620):   1572880
        Wacom button action 12 (621):   1572881
        Wacom button action 13 (622):   1572882
        Wacom button action 14 (623):   1572883
        Wacom button action 15 (624):   1572884
        Wacom button action 16 (625):   1572885
        Wacom button action 17 (626):   1572886
        Wacom button action 18 (627):   1572887
        Wacom button action 19 (628):   1572888
        Wacom Button Actions (629):     "Wacom button action 0" (609)…
}}}

Ок, видим 20 кнопок, от id=0 до id=19. 

Надо учесть два неочевидных нюанса :

1. На моем планшете шесть кнопок, но их нумерация от 1 до 10 (1, 2, 3, 8, 9, 10) указывает на то, что драйвер Wacom считает, что на планшете 10 кнопок. При их переназначении надо будет указать драйверу неортодоксальную настройку сразу для десяти кнопок, в том числе и для отсутствующих (4, 5, 6, 7). Добро пожаловать в мир “embedded electronics”.

Решение: назначить новые номера сразу десяти кнопкам, просто для отсутствующих будет установлен енйтральнй код ''0''. Это делается так:

* 16 — условный id подключенного планшета устройства (Pad pad),
* первые три числа — новые коды для первых трех кнопок, которые объявляет драйвер планшета
* четыре нуля — пустые слоты для условных кнопок, которые подразумевает драйвер Wacom
* оставшиеся три числа — новые коды для оставшихся трех кнопок на моем планшете:

''xinput set-button-map 16 51 52 53 0 0 0 0 54 55 56''

Так проверять возвращаемые коды нажатия на каждую кнопку на планшете:

''xinput test 16''

2. Система не разделяет номера кнопок на планшетах, мышках и клавиатуре — Debian считает и клавиатуру, и мышь, и тачпад внешними устройствами, которые к ней подключены, и каждая кнопка в этой экосистеме //evdev// имеет свой отдельный номер. b:1 — это кнопка номер 1, и обычно её все/всегда определяют как левую кнопку мыши (или клик по тачпаду). Планшет — просто ещё одно внешнее устройство. И если на нём первая физическая кнопка определяется под номером 1, то она действует как клик по тачпаду. Если насильно переназначить её “для планшета” (а я хочу, чтобы первая кнопка на нём работала как [Home]), то ВНЕЗАПНО и мышь/тачпад на ноутбуке тоже перестанет “кликать” и начнет работать как кнопка [Home]. 

Решение: назначить каждой кнопке планшета новый, неиспользуемый в системе номер, чтобы избежать возможного пересечения кодов. По-умолчанию в системе задействованы не меньше десятка кодов клавиш, поэтому выберем диапазон подальше от начала, например 51–56. Эта операция назыавается «назначить новую карту кнопок».

===== Коды нужных кнопок для замены =====

Неочевидно, что они могут быть очень разными на одном и том же устройстве. Например, клавиша [Home] может быть на ноутбуке в нескольких вариантах:

* как отдельная кнопка
* как дополнительная кнопка через ''Fn''
* как отдельная кнопка на цифровом секторе, но только если режим NumLock отключён
* как кнопка на внешней клавиатуре (через usb)

Поэтому сперва надо узнать коды всех нужных клавиш. Например, мне надо, чтобы кнопки на планшете работали так:

1. Home
2. PageUp
3. PageDown
4. zoom in
5. zoom out
6. Undo

Проверить:

''xev''

Над терминалом откроется окно для перехвата нажатий клавиш. Последовательно потыкать по клавишам и смотреть ответы в терминале. Например, кнопка [Home] в цифровом секторе называется [KP_Home].

''KeyPress event, serial 40, synthetic NO, window 0x6a00001,''
	''root 0x6b2, subw 0x0, time 6093010, (295,-476), root:(1152,12),''
	''state 0x0, keycode 79 (keysym 0xff95,'' __''KP_Home''__''), same_screen YES,''
	''XLookupString gives 0 bytes:'' 
	''XmbLookupString gives 0 bytes:'' 
	''XFilterEvent returns: False''

Последовательно понажимать остальные нужные клавиши и посмотреть на коды. Сочетания клавиш вроде Ctrl+Z регистрируются как нажатия клавиш по-отдельности: “''Control_L+z''”.

===== Конфиги для подключения =====

Надо сделать несколько конфигов для разных сценариев. Например, в браузере zoom in/out делается через “''Ctrl+/-''”, а в Gimp это делается через “''+/-''”.

Конфиги будут храниться в простых plain text файлах (можно даже без расширения) в отдельном каталоге:

''mkdir -p ~/huion-h640p/ && mcedit ~/huion-h640p/browser.conf''

Вставить:

{{{code: lang="sh" linenumbers="True"
###########################
# xbindkeys для браузера
###########################

# ======= Переназначение кнопок для рисовального планшета Huion H640P

# Кнопка #1 — Home
"xdotool key Home"
  b:51

# Кнопка #2 — PgUp
"xdotool key Prior"
  b:52

# Кнопка #3 — PgDown
"xdotool key Next"
  b:53

# Кнопка #4 — zoom in
"xdotool key --clearmodifiers Control_L+KP_Add"
  b:54

# Кнопка #5 — zoom out
"xdotool key --clearmodifiers Control_L+KP_Subtract"
  b:55

# Кнопка #6 — Undo
"xdotool key --clearmodifiers Control_L+z"
  b:56

}}}

Сделать конфиг для GIMP:

''cp browser.conf gimp.conf''

и переопределить кнопки под GIMP — там zoom in/out работает только по кнопке ''+/-'':

{{{code: lang="sh" linenumbers="True"
###########################
# xbindkeys для браузера
###########################

# ======= Переназначение кнопок для рисовального планшета Huion H640P

# Кнопка #1 — Home
"xdotool key Home"
  b:51

# Кнопка #2 — PgUp
"xdotool key Prior"
  b:52

# Кнопка #3 — PgDown
"xdotool key Next"
  b:53

# Кнопка #4 — zoom in
"xdotool key --clearmodifiers KP_Add"
  b:54

# Кнопка #5 — zoom out
"xdotool key --clearmodifiers KP_Subtract"
  b:55

# Кнопка #6 — Undo
"xdotool key --clearmodifiers Control_L+z"
  b:56

}}}

Если нужны не [Home], а быстрое переключение на инструмент (Карандаш) — подставить нужную букву, которая объявлена в GIMP.

И так далее.

===== Скрипт для запуска =====

''mcedit ~/huion-h640p/run_huion_h640p.sh''

Инсерт:

{{{code: lang="sh" linenumbers="True"
#!/bin/bash

    # =============================================
    # Настройка кнопок планшета Huion H640P (Pad pad)
    # Параметр: имя файла конфигурации для xbindkeys 
    # будет указано как параметр скрипта в fileConfig
    # =============================================

fileConfig="$1"
CONFIG_FILE="/home/mySettings/myScripts/huion-h640p/$fileConfig"

    # Проверить файл конфигурации
if [[ ! -f "$CONFIG_FILE" ]]; then
    echo -e "\n\tНе нахожу файл '$CONFIG_FILE'\n"
    exit 1
fi

    # Найти ID устройства с именем "Pad pad" (берём первый найденный)
deviceID=$(xinput list | grep -i "Pad pad" | head -1 | grep -o 'id=[0-9]\+' | cut -d= -f2)

    # Если планшет не найден
if [[ -z "$deviceID" ]]; then
    echo -e "\n\tНе нахожу планшет!\n"
    exit 1
fi

    # Назначить новую карту десяти кнопок (первые последние три кнопок — 
    # на планшете, остальные виртуальные, их подразумевает драйвер
xinput set-button-map "$deviceID" 51 52 53 0 0 0 0 54 55 56

    # Завершить вероятные старые процессы xbindkeys, запущенные с этим конфигом
pids=$(pgrep -f "xbindkeys -f $CONFIG_FILE")
if [[ -n "$pids" ]]; then
    # echo "Завершаем старые процессы xbindkeys: $pids"
    kill $pids
    # Ждём, пока процессы завершатся
    for pid in $pids; do
        while kill -0 $pid 2>/dev/null; do
            sleep 0.1
        done
    done
fi
    
    # Поднять конфиг кнопок планшета через xbindkeys
xbindkeys -f "$CONFIG_FILE" -n &

echo -e "id планшета: $deviceID\nПрофиль планшета: $fileConfig \n"

}}}

==== Алиасы для подключения ====

''mcedit ~/.bashrc''

Добавить алиасы:

'''
# ------------------------------
# ПЛАНШЕТ H640P
# ------------------------------

alias huion-browser="/home/mySettings/myScripts/huion-h640p/run_huion_h640p.sh browser.conf"
alias huion-gimp="/home/mySettings/myScripts/huion-h640p/run_huion_h640p.sh gimp.conf"
'''

и так далее.

1. подключить планшет
2. поднять его конфиг для браузера: 

''huion-browser''

4. переключиться в браузер, 
5. пролистать страницу вниз, 
6. нажать первую кнопку на планшете.

Expected result: страница прокручивается вверх, как это должно происходить после нажатия [Home].

Можно закатать скрипт запуска в desktop-файл, чтобы запускать профили из общего меню приложений.
